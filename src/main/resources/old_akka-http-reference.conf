akka {
    http {
      hostname = "localhost"
      port = 9998

      #If you are using akka.http.AkkaRestServlet
      filters = ["akka.security.AkkaSecurityFilterFactory"] # List with all jersey filters to use
      # resource-packages = ["sample.rest.scala",
      #                      "sample.rest.java",
      #                      "sample.security"] # List with all resource packages for your Jersey services
      resource-packages = []

      # The authentication service to use. Need to be overridden (sample now)
      # authenticator = "sample.security.BasicAuthenticationService"
      authenticator = "N/A"

      # Uncomment if you are using the KerberosAuthenticationActor
      # kerberos {
      #   servicePrincipal = "HTTP/localhost@EXAMPLE.COM"
      #   keyTabLocation   = "URL to keytab"
      #   kerberosDebug    = "true"
      #   realm            = "EXAMPLE.COM"
      # }
      kerberos {
        servicePrincipal = "N/A"
        keyTabLocation   = "N/A"
        kerberosDebug    = "N/A"
        realm            = ""
      }

      #If you are using akka.http.AkkaMistServlet
      mist-dispatcher {
        #type = "GlobalExecutorBasedEventDriven" # Uncomment if you want to use a different dispatcher than the default one for Comet
      }
      connection-close = true                 # toggles the addition of the "Connection" response header with a "close" value
      root-actor-id = "_httproot"             # the id of the actor to use as the root endpoint
      root-actor-builtin = true               # toggles the use of the built-in root endpoint base class
      timeout = 1000                          # the default timeout for all async requests (in ms)
      expired-header-name = "Async-Timeout"   # the name of the response header to use when an async request expires
      expired-header-value = "expired"        # the value of the response header to use when an async request expires
    }
}